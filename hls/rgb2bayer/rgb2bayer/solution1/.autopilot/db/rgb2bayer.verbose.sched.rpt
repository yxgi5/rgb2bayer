

================================================================
== Vivado HLS Report for 'rgb2bayer'
================================================================
* Date:           Wed Aug  4 20:17:26 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        rgb2bayer
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     3.466|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |    ?|    ?|         2|          -|          -|     ?|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp_1)
3 --> 
	4  / (!tmp_14)
	2  / (tmp_14)
4 --> 
	3  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_Val2_s = alloca i24"   --->   Operation 5 'alloca' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %s_axis_video_V_data_V), !map !64"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %s_axis_video_V_keep_V), !map !68"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %s_axis_video_V_strb_V), !map !72"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_user_V), !map !76"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_last_V), !map !80"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_id_V), !map !84"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_dest_V), !map !88"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %m_axis_video_V_data_V), !map !92"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3* %m_axis_video_V_keep_V), !map !96"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3* %m_axis_video_V_strb_V), !map !100"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_user_V), !map !104"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_last_V), !map !108"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_id_V), !map !112"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_dest_V), !map !116"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %hsize_in), !map !120"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %vsize_in), !map !126"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2 %pattern_V), !map !130"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @rgb2bayer_str) nounwind"   --->   Operation 23 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%pattern_V_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %pattern_V)"   --->   Operation 24 'read' 'pattern_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%vsize_in_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %vsize_in)"   --->   Operation 25 'read' 'vsize_in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%hsize_in_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %hsize_in)"   --->   Operation 26 'read' 'hsize_in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %s_axis_video_V_data_V, i8* %s_axis_video_V_keep_V, i8* %s_axis_video_V_strb_V, i1* %s_axis_video_V_user_V, i1* %s_axis_video_V_last_V, i1* %s_axis_video_V_id_V, i1* %s_axis_video_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:7]   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %m_axis_video_V_data_V, i3* %m_axis_video_V_keep_V, i3* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:8]   --->   Operation 28 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:9]   --->   Operation 29 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.95ns)   --->   "%sel_tmp = icmp eq i2 %pattern_V_read, 0" [src/cpp/rgb2bayer.cpp:32]   --->   Operation 30 'icmp' 'sel_tmp' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.95ns)   --->   "%sel_tmp7 = icmp eq i2 %pattern_V_read, 1" [src/cpp/rgb2bayer.cpp:32]   --->   Operation 31 'icmp' 'sel_tmp7' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.95ns)   --->   "%sel_tmp4 = icmp eq i2 %pattern_V_read, -2" [src/cpp/rgb2bayer.cpp:32]   --->   Operation 32 'icmp' 'sel_tmp4' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.95ns)   --->   "%sel_tmp3 = icmp eq i2 %pattern_V_read, -1" [src/cpp/rgb2bayer.cpp:32]   --->   Operation 33 'icmp' 'sel_tmp3' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (1.76ns)   --->   "br label %1" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 34 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.46>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%j = phi i31 [ 0, %0 ], [ %j_1, %4 ]"   --->   Operation 35 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%j_cast = zext i31 %j to i32" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 36 'zext' 'j_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (2.47ns)   --->   "%tmp_1 = icmp slt i32 %j_cast, %vsize_in_read" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 37 'icmp' 'tmp_1' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (2.52ns)   --->   "%j_1 = add i31 %j, 1" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 38 'add' 'j_1' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %2, label %5" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 39 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_2 = trunc i31 %j to i1" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 40 'trunc' 'tmp_2' <Predicate = (tmp_1)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [src/cpp/rgb2bayer.cpp:22]   --->   Operation 41 'specregionbegin' 'tmp' <Predicate = (tmp_1)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 42 'specpipeline' <Predicate = (tmp_1)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.97ns)   --->   "%tmp_3 = xor i1 %tmp_2, true" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 43 'xor' 'tmp_3' <Predicate = (tmp_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.97ns)   --->   "%sel_tmp1 = and i1 %sel_tmp, %tmp_3" [src/cpp/rgb2bayer.cpp:32]   --->   Operation 44 'and' 'sel_tmp1' <Predicate = (tmp_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.97ns)   --->   "%sel_tmp5 = and i1 %sel_tmp, %tmp_2" [src/cpp/rgb2bayer.cpp:32]   --->   Operation 45 'and' 'sel_tmp5' <Predicate = (tmp_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.97ns)   --->   "%sel_tmp8 = and i1 %sel_tmp7, %tmp_3" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 46 'and' 'sel_tmp8' <Predicate = (tmp_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.97ns)   --->   "%sel_tmp2 = and i1 %sel_tmp7, %tmp_2" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 47 'and' 'sel_tmp2' <Predicate = (tmp_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.97ns)   --->   "%sel_tmp6 = and i1 %sel_tmp4, %tmp_3" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 48 'and' 'sel_tmp6' <Predicate = (tmp_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.97ns)   --->   "%sel_tmp9 = and i1 %sel_tmp4, %tmp_2" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 49 'and' 'sel_tmp9' <Predicate = (tmp_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.97ns)   --->   "%sel_tmp10 = and i1 %sel_tmp3, %tmp_3" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 50 'and' 'sel_tmp10' <Predicate = (tmp_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.97ns)   --->   "%sel_tmp11 = and i1 %sel_tmp3, %tmp_2" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 51 'and' 'sel_tmp11' <Predicate = (tmp_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node tmp_12)   --->   "%tmp_4 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %hsize_in_read, i32 31)"   --->   Operation 52 'bitselect' 'tmp_4' <Predicate = (tmp_1)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (2.55ns)   --->   "%hsize_in_op_op = add i32 1, %hsize_in_read"   --->   Operation 53 'add' 'hsize_in_op_op' <Predicate = (tmp_1)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node tmp_12)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %hsize_in_op_op, i32 31)"   --->   Operation 54 'bitselect' 'tmp_9' <Predicate = (tmp_1)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node p_neg_t)   --->   "%p_neg = xor i32 %hsize_in_read, -1"   --->   Operation 55 'xor' 'p_neg' <Predicate = (tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node p_neg_t)   --->   "%p_lshr = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %p_neg, i32 1, i32 31)"   --->   Operation 56 'partselect' 'p_lshr' <Predicate = (tmp_1)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (2.52ns) (out node of the LUT)   --->   "%p_neg_t = sub i31 0, %p_lshr"   --->   Operation 57 'sub' 'p_neg_t' <Predicate = (tmp_1)> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node tmp_12)   --->   "%tmp_10 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %hsize_in_op_op, i32 1, i32 31)"   --->   Operation 58 'partselect' 'tmp_10' <Predicate = (tmp_1)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node tmp_12)   --->   "%tmp_11 = select i1 %tmp_9, i31 %p_neg_t, i31 %tmp_10"   --->   Operation 59 'select' 'tmp_11' <Predicate = (tmp_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.73ns) (out node of the LUT)   --->   "%tmp_12 = select i1 %tmp_4, i31 0, i31 %tmp_11"   --->   Operation 60 'select' 'tmp_12' <Predicate = (tmp_1)> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_13 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_12, i1 false)"   --->   Operation 61 'bitconcatenate' 'tmp_13' <Predicate = (tmp_1)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (1.76ns)   --->   "br label %3" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 62 'br' <Predicate = (tmp_1)> <Delay = 1.76>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "ret void" [src/cpp/rgb2bayer.cpp:114]   --->   Operation 63 'ret' <Predicate = (!tmp_1)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.77>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%i = phi i32 [ 0, %2 ], [ %i_1, %_ifconv ]"   --->   Operation 64 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (2.47ns)   --->   "%tmp_14 = icmp eq i32 %i, %tmp_13" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 65 'icmp' 'tmp_14' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %tmp_14, label %4, label %_ifconv" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 66 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%p_Val2_load = load i24* %p_Val2_s"   --->   Operation 67 'load' 'p_Val2_load' <Predicate = (!tmp_14)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%empty = call { i64, i8, i8, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i1P.i1P.i1P.i1P(i64* %s_axis_video_V_data_V, i8* %s_axis_video_V_keep_V, i8* %s_axis_video_V_strb_V, i1* %s_axis_video_V_user_V, i1* %s_axis_video_V_last_V, i1* %s_axis_video_V_id_V, i1* %s_axis_video_V_dest_V)" [src/cpp/rgb2bayer.cpp:27]   --->   Operation 68 'read' 'empty' <Predicate = (!tmp_14)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_data_V_1 = extractvalue { i64, i8, i8, i1, i1, i1, i1 } %empty, 0" [src/cpp/rgb2bayer.cpp:27]   --->   Operation 69 'extractvalue' 'tmp_data_V_1' <Predicate = (!tmp_14)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue { i64, i8, i8, i1, i1, i1, i1 } %empty, 3" [src/cpp/rgb2bayer.cpp:27]   --->   Operation 70 'extractvalue' 'tmp_user_V' <Predicate = (!tmp_14)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue { i64, i8, i8, i1, i1, i1, i1 } %empty, 4" [src/cpp/rgb2bayer.cpp:27]   --->   Operation 71 'extractvalue' 'tmp_last_V' <Predicate = (!tmp_14)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_5 = call i20 @_ssdm_op_PartSelect.i20.i64.i32.i32(i64 %tmp_data_V_1, i32 20, i32 39)" [src/cpp/rgb2bayer.cpp:40]   --->   Operation 72 'partselect' 'tmp_5' <Predicate = (!tmp_14)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%p_Result_s = call i24 @_ssdm_op_PartSet.i24.i24.i20.i32.i32(i24 %p_Val2_load, i20 %tmp_5, i32 0, i32 19)" [src/cpp/rgb2bayer.cpp:40]   --->   Operation 73 'partset' 'p_Result_s' <Predicate = (!tmp_14)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_15 = trunc i64 %tmp_data_V_1 to i10" [src/cpp/rgb2bayer.cpp:45]   --->   Operation 74 'trunc' 'tmp_15' <Predicate = (!tmp_14 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%p_Result_6 = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %tmp_data_V_1, i32 40, i32 49)" [src/cpp/rgb2bayer.cpp:47]   --->   Operation 75 'partselect' 'p_Result_6' <Predicate = (!tmp_14 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_6 = call i20 @_ssdm_op_BitConcatenate.i20.i10.i10(i10 %p_Result_6, i10 %tmp_15)" [src/cpp/rgb2bayer.cpp:47]   --->   Operation 76 'bitconcatenate' 'tmp_6' <Predicate = (!tmp_14 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%p_Result_1 = call i24 @_ssdm_op_PartSet.i24.i24.i20.i32.i32(i24 %p_Val2_load, i20 %tmp_6, i32 0, i32 19)" [src/cpp/rgb2bayer.cpp:47]   --->   Operation 77 'partset' 'p_Result_1' <Predicate = (!tmp_14 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%p_Result_s_10 = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %tmp_data_V_1, i32 50, i32 59)" [src/cpp/rgb2bayer.cpp:58]   --->   Operation 78 'partselect' 'p_Result_s_10' <Predicate = (!tmp_14 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_7 = call i20 @_ssdm_op_BitConcatenate.i20.i10.i10(i10 %p_Result_s_10, i10 %tmp_15)" [src/cpp/rgb2bayer.cpp:58]   --->   Operation 79 'bitconcatenate' 'tmp_7' <Predicate = (!tmp_14 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%p_Result_4 = call i24 @_ssdm_op_PartSet.i24.i24.i20.i32.i32(i24 %p_Val2_load, i20 %tmp_7, i32 0, i32 19)" [src/cpp/rgb2bayer.cpp:58]   --->   Operation 80 'partset' 'p_Result_4' <Predicate = (!tmp_14 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%p_Result_2 = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %tmp_data_V_1, i32 10, i32 19)" [src/cpp/rgb2bayer.cpp:63]   --->   Operation 81 'partselect' 'p_Result_2' <Predicate = (!tmp_14 & !sel_tmp9 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%p_Result_3 = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %tmp_data_V_1, i32 30, i32 39)" [src/cpp/rgb2bayer.cpp:65]   --->   Operation 82 'partselect' 'p_Result_3' <Predicate = (!tmp_14 & !sel_tmp9 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_8 = call i20 @_ssdm_op_BitConcatenate.i20.i10.i10(i10 %p_Result_3, i10 %p_Result_2)" [src/cpp/rgb2bayer.cpp:65]   --->   Operation 83 'bitconcatenate' 'tmp_8' <Predicate = (!tmp_14 & !sel_tmp9 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%p_Result_5 = call i24 @_ssdm_op_PartSet.i24.i24.i20.i32.i32(i24 %p_Val2_load, i20 %tmp_8, i32 0, i32 19)" [src/cpp/rgb2bayer.cpp:65]   --->   Operation 84 'partset' 'p_Result_5' <Predicate = (!tmp_14 & !sel_tmp9 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V_5)   --->   "%video_o_data_V_4 = select i1 %sel_tmp1, i24 %p_Result_s, i24 %p_Val2_load" [src/cpp/rgb2bayer.cpp:32]   --->   Operation 85 'select' 'video_o_data_V_4' <Predicate = (!tmp_14 & !sel_tmp5 & !sel_tmp8 & !sel_tmp2 & !sel_tmp6 & !sel_tmp9 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.69ns) (out node of the LUT)   --->   "%video_o_data_V_5 = select i1 %sel_tmp5, i24 %p_Result_1, i24 %video_o_data_V_4" [src/cpp/rgb2bayer.cpp:32]   --->   Operation 86 'select' 'video_o_data_V_5' <Predicate = (!tmp_14 & !sel_tmp8 & !sel_tmp2 & !sel_tmp6 & !sel_tmp9 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V_7)   --->   "%video_o_data_V_6 = select i1 %sel_tmp8, i24 %p_Result_4, i24 %video_o_data_V_5" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 87 'select' 'video_o_data_V_6' <Predicate = (!tmp_14 & !sel_tmp2 & !sel_tmp6 & !sel_tmp9 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.69ns) (out node of the LUT)   --->   "%video_o_data_V_7 = select i1 %sel_tmp2, i24 %p_Result_5, i24 %video_o_data_V_6" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 88 'select' 'video_o_data_V_7' <Predicate = (!tmp_14 & !sel_tmp6 & !sel_tmp9 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V_9)   --->   "%video_o_data_V_8 = select i1 %sel_tmp6, i24 %p_Result_5, i24 %video_o_data_V_7" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 89 'select' 'video_o_data_V_8' <Predicate = (!tmp_14 & !sel_tmp9 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.69ns) (out node of the LUT)   --->   "%video_o_data_V_9 = select i1 %sel_tmp9, i24 %p_Result_4, i24 %video_o_data_V_8" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 90 'select' 'video_o_data_V_9' <Predicate = (!tmp_14 & !sel_tmp10 & !sel_tmp11)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V)   --->   "%video_o_data_V_11 = select i1 %sel_tmp10, i24 %p_Result_1, i24 %video_o_data_V_9" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 91 'select' 'video_o_data_V_11' <Predicate = (!tmp_14 & !sel_tmp11)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.69ns) (out node of the LUT)   --->   "%video_o_data_V = select i1 %sel_tmp11, i24 %p_Result_s, i24 %video_o_data_V_11" [src/cpp/rgb2bayer.cpp:35]   --->   Operation 92 'select' 'video_o_data_V' <Predicate = (!tmp_14)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 93 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i3P.i3P.i1P.i1P.i1P.i1P(i24* %m_axis_video_V_data_V, i3* %m_axis_video_V_keep_V, i3* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, i24 %video_o_data_V, i3 undef, i3 undef, i1 %tmp_user_V, i1 %tmp_last_V, i1 undef, i1 undef)" [src/cpp/rgb2bayer.cpp:111]   --->   Operation 93 'write' <Predicate = (!tmp_14)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 94 [1/1] (2.55ns)   --->   "%i_1 = add nsw i32 2, %i" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 94 'add' 'i_1' <Predicate = (!tmp_14)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "store i24 %video_o_data_V, i24* %p_Val2_s" [src/cpp/rgb2bayer.cpp:111]   --->   Operation 95 'store' <Predicate = (!tmp_14)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp)" [src/cpp/rgb2bayer.cpp:113]   --->   Operation 96 'specregionend' 'empty_11' <Predicate = (tmp_14)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "br label %1" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 97 'br' <Predicate = (tmp_14)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 98 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i3P.i3P.i1P.i1P.i1P.i1P(i24* %m_axis_video_V_data_V, i3* %m_axis_video_V_keep_V, i3* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, i24 %video_o_data_V, i3 undef, i3 undef, i1 %tmp_user_V, i1 %tmp_last_V, i1 undef, i1 undef)" [src/cpp/rgb2bayer.cpp:111]   --->   Operation 98 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "br label %3" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 99 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', src/cpp/rgb2bayer.cpp:21) [49]  (1.77 ns)

 <State 2>: 3.47ns
The critical path consists of the following:
	'icmp' operation ('tmp_1', src/cpp/rgb2bayer.cpp:21) [51]  (2.47 ns)
	blocking operation 0.993 ns on control path)

 <State 3>: 2.78ns
The critical path consists of the following:
	'load' operation ('p_Val2_load') on local variable '__Val2__' [83]  (0 ns)
	'select' operation ('video_o.data.V', src/cpp/rgb2bayer.cpp:32) [102]  (0.694 ns)
	'select' operation ('video_o.data.V', src/cpp/rgb2bayer.cpp:35) [103]  (0 ns)
	'select' operation ('video_o.data.V', src/cpp/rgb2bayer.cpp:35) [104]  (0.694 ns)
	'select' operation ('video_o.data.V', src/cpp/rgb2bayer.cpp:35) [105]  (0 ns)
	'select' operation ('video_o.data.V', src/cpp/rgb2bayer.cpp:35) [106]  (0.694 ns)
	'select' operation ('video_o.data.V', src/cpp/rgb2bayer.cpp:35) [107]  (0 ns)
	'select' operation ('video_o.data.V', src/cpp/rgb2bayer.cpp:35) [108]  (0.694 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
