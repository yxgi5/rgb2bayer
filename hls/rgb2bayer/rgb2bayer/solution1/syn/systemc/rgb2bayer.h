// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rgb2bayer_HH_
#define _rgb2bayer_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct rgb2bayer : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<48> > s_axis_video_TDATA;
    sc_in< sc_logic > s_axis_video_TVALID;
    sc_out< sc_logic > s_axis_video_TREADY;
    sc_in< sc_lv<6> > s_axis_video_TKEEP;
    sc_in< sc_lv<6> > s_axis_video_TSTRB;
    sc_in< sc_lv<1> > s_axis_video_TUSER;
    sc_in< sc_lv<1> > s_axis_video_TLAST;
    sc_in< sc_lv<1> > s_axis_video_TID;
    sc_in< sc_lv<1> > s_axis_video_TDEST;
    sc_out< sc_lv<16> > m_axis_video_TDATA;
    sc_out< sc_logic > m_axis_video_TVALID;
    sc_in< sc_logic > m_axis_video_TREADY;
    sc_out< sc_lv<2> > m_axis_video_TKEEP;
    sc_out< sc_lv<2> > m_axis_video_TSTRB;
    sc_out< sc_lv<1> > m_axis_video_TUSER;
    sc_out< sc_lv<1> > m_axis_video_TLAST;
    sc_out< sc_lv<1> > m_axis_video_TID;
    sc_out< sc_lv<1> > m_axis_video_TDEST;
    sc_in< sc_lv<32> > hsize_in;
    sc_in< sc_lv<32> > vsize_in;
    sc_in< sc_lv<2> > pattern_V;


    // Module declarations
    rgb2bayer(sc_module_name name);
    SC_HAS_PROCESS(rgb2bayer);

    ~rgb2bayer();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<48> > s_axis_video_V_data_V_0_data_out;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_vld_out;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_ack_in;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_ack_out;
    sc_signal< sc_lv<48> > s_axis_video_V_data_V_0_payload_A;
    sc_signal< sc_lv<48> > s_axis_video_V_data_V_0_payload_B;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_sel_rd;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_sel_wr;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_sel;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_load_A;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > s_axis_video_V_data_V_0_state;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > s_axis_video_V_user_V_0_data_out;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_vld_out;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_ack_in;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_ack_out;
    sc_signal< sc_lv<1> > s_axis_video_V_user_V_0_payload_A;
    sc_signal< sc_lv<1> > s_axis_video_V_user_V_0_payload_B;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_sel_rd;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_sel_wr;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_sel;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_load_A;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > s_axis_video_V_user_V_0_state;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > s_axis_video_V_last_V_0_data_out;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_vld_out;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_ack_in;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_ack_out;
    sc_signal< sc_lv<1> > s_axis_video_V_last_V_0_payload_A;
    sc_signal< sc_lv<1> > s_axis_video_V_last_V_0_payload_B;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_sel_rd;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_sel_wr;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_sel;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_load_A;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_load_B;
    sc_signal< sc_lv<2> > s_axis_video_V_last_V_0_state;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_state_cmp_full;
    sc_signal< sc_logic > s_axis_video_V_dest_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > s_axis_video_V_dest_V_0_state;
    sc_signal< sc_lv<16> > m_axis_video_V_data_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_ack_out;
    sc_signal< sc_lv<16> > m_axis_video_V_data_V_1_payload_A;
    sc_signal< sc_lv<16> > m_axis_video_V_data_V_1_payload_B;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_sel;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_load_A;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > m_axis_video_V_data_V_1_state;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > m_axis_video_V_keep_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_keep_V_1_state;
    sc_signal< sc_lv<2> > m_axis_video_V_strb_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_strb_V_1_state;
    sc_signal< sc_lv<1> > m_axis_video_V_user_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_ack_out;
    sc_signal< sc_lv<1> > m_axis_video_V_user_V_1_payload_A;
    sc_signal< sc_lv<1> > m_axis_video_V_user_V_1_payload_B;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_sel;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_load_A;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > m_axis_video_V_user_V_1_state;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > m_axis_video_V_last_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > m_axis_video_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > m_axis_video_V_last_V_1_payload_B;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_sel;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_load_A;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > m_axis_video_V_last_V_1_state;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > m_axis_video_V_id_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_id_V_1_state;
    sc_signal< sc_lv<1> > m_axis_video_V_dest_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_dest_V_1_state;
    sc_signal< sc_logic > s_axis_video_TDATA_blk_n;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_10_fu_379_p2;
    sc_signal< sc_logic > m_axis_video_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > sel_tmp_fu_215_p2;
    sc_signal< sc_lv<1> > sel_tmp_reg_565;
    sc_signal< sc_lv<1> > sel_tmp7_fu_221_p2;
    sc_signal< sc_lv<1> > sel_tmp7_reg_571;
    sc_signal< sc_lv<1> > sel_tmp4_fu_227_p2;
    sc_signal< sc_lv<1> > sel_tmp4_reg_577;
    sc_signal< sc_lv<1> > sel_tmp3_fu_233_p2;
    sc_signal< sc_lv<1> > sel_tmp3_reg_583;
    sc_signal< sc_lv<31> > j_1_fu_248_p2;
    sc_signal< sc_lv<31> > j_1_reg_592;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_264_p2;
    sc_signal< sc_lv<1> > sel_tmp1_reg_597;
    sc_signal< sc_lv<1> > tmp_1_fu_243_p2;
    sc_signal< sc_lv<1> > sel_tmp5_fu_269_p2;
    sc_signal< sc_lv<1> > sel_tmp5_reg_602;
    sc_signal< sc_lv<1> > sel_tmp8_fu_274_p2;
    sc_signal< sc_lv<1> > sel_tmp8_reg_607;
    sc_signal< sc_lv<1> > sel_tmp2_fu_279_p2;
    sc_signal< sc_lv<1> > sel_tmp2_reg_612;
    sc_signal< sc_lv<1> > sel_tmp6_fu_284_p2;
    sc_signal< sc_lv<1> > sel_tmp6_reg_617;
    sc_signal< sc_lv<1> > sel_tmp9_fu_289_p2;
    sc_signal< sc_lv<1> > sel_tmp9_reg_622;
    sc_signal< sc_lv<1> > sel_tmp10_fu_294_p2;
    sc_signal< sc_lv<1> > sel_tmp10_reg_627;
    sc_signal< sc_lv<1> > sel_tmp11_fu_299_p2;
    sc_signal< sc_lv<1> > sel_tmp11_reg_632;
    sc_signal< sc_lv<32> > tmp_9_fu_371_p3;
    sc_signal< sc_lv<32> > tmp_9_reg_637;
    sc_signal< bool > ap_block_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< sc_lv<16> > video_o_data_V_fu_528_p3;
    sc_signal< sc_lv<32> > i_1_fu_536_p2;
    sc_signal< sc_lv<32> > i_1_reg_660;
    sc_signal< sc_lv<31> > j_reg_193;
    sc_signal< sc_lv<32> > i_reg_204;
    sc_signal< sc_lv<16> > p_Val2_s_fu_124;
    sc_signal< sc_lv<32> > j_cast_fu_239_p1;
    sc_signal< sc_lv<1> > tmp_2_fu_254_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_258_p2;
    sc_signal< sc_lv<32> > hsize_in_op_op_fu_311_p2;
    sc_signal< sc_lv<32> > p_neg_fu_324_p2;
    sc_signal< sc_lv<31> > p_lshr_fu_329_p4;
    sc_signal< sc_lv<1> > tmp_5_fu_316_p3;
    sc_signal< sc_lv<31> > p_neg_t_fu_339_p2;
    sc_signal< sc_lv<31> > tmp_6_fu_345_p4;
    sc_signal< sc_lv<1> > tmp_4_fu_304_p3;
    sc_signal< sc_lv<31> > tmp_7_fu_355_p3;
    sc_signal< sc_lv<31> > tmp_8_fu_363_p3;
    sc_signal< sc_lv<8> > p_Result_6_fu_415_p4;
    sc_signal< sc_lv<8> > tmp_11_fu_411_p1;
    sc_signal< sc_lv<8> > p_Result_s_7_fu_433_p4;
    sc_signal< sc_lv<8> > p_Result_3_fu_461_p4;
    sc_signal< sc_lv<8> > p_Result_2_fu_451_p4;
    sc_signal< sc_lv<16> > p_Result_s_fu_401_p4;
    sc_signal< sc_lv<16> > p_Result_1_fu_425_p3;
    sc_signal< sc_lv<16> > video_o_data_V_4_fu_479_p3;
    sc_signal< sc_lv<16> > p_Result_4_fu_443_p3;
    sc_signal< sc_lv<16> > video_o_data_V_5_fu_486_p3;
    sc_signal< sc_lv<16> > p_Result_5_fu_471_p3;
    sc_signal< sc_lv<16> > video_o_data_V_6_fu_493_p3;
    sc_signal< sc_lv<16> > video_o_data_V_7_fu_500_p3;
    sc_signal< sc_lv<16> > video_o_data_V_8_fu_507_p3;
    sc_signal< sc_lv<16> > video_o_data_V_9_fu_514_p3;
    sc_signal< sc_lv<16> > video_o_data_V_11_fu_521_p3;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_18;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state2();
    void thread_ap_block_state3();
    void thread_ap_block_state3_io();
    void thread_ap_rst_n_inv();
    void thread_hsize_in_op_op_fu_311_p2();
    void thread_i_1_fu_536_p2();
    void thread_j_1_fu_248_p2();
    void thread_j_cast_fu_239_p1();
    void thread_m_axis_video_TDATA();
    void thread_m_axis_video_TDATA_blk_n();
    void thread_m_axis_video_TDEST();
    void thread_m_axis_video_TID();
    void thread_m_axis_video_TKEEP();
    void thread_m_axis_video_TLAST();
    void thread_m_axis_video_TSTRB();
    void thread_m_axis_video_TUSER();
    void thread_m_axis_video_TVALID();
    void thread_m_axis_video_V_data_V_1_ack_in();
    void thread_m_axis_video_V_data_V_1_ack_out();
    void thread_m_axis_video_V_data_V_1_data_out();
    void thread_m_axis_video_V_data_V_1_load_A();
    void thread_m_axis_video_V_data_V_1_load_B();
    void thread_m_axis_video_V_data_V_1_sel();
    void thread_m_axis_video_V_data_V_1_state_cmp_full();
    void thread_m_axis_video_V_data_V_1_vld_in();
    void thread_m_axis_video_V_data_V_1_vld_out();
    void thread_m_axis_video_V_dest_V_1_ack_in();
    void thread_m_axis_video_V_dest_V_1_ack_out();
    void thread_m_axis_video_V_dest_V_1_data_out();
    void thread_m_axis_video_V_dest_V_1_sel();
    void thread_m_axis_video_V_dest_V_1_vld_in();
    void thread_m_axis_video_V_dest_V_1_vld_out();
    void thread_m_axis_video_V_id_V_1_ack_in();
    void thread_m_axis_video_V_id_V_1_ack_out();
    void thread_m_axis_video_V_id_V_1_data_out();
    void thread_m_axis_video_V_id_V_1_sel();
    void thread_m_axis_video_V_id_V_1_vld_in();
    void thread_m_axis_video_V_id_V_1_vld_out();
    void thread_m_axis_video_V_keep_V_1_ack_in();
    void thread_m_axis_video_V_keep_V_1_ack_out();
    void thread_m_axis_video_V_keep_V_1_data_out();
    void thread_m_axis_video_V_keep_V_1_sel();
    void thread_m_axis_video_V_keep_V_1_vld_in();
    void thread_m_axis_video_V_keep_V_1_vld_out();
    void thread_m_axis_video_V_last_V_1_ack_in();
    void thread_m_axis_video_V_last_V_1_ack_out();
    void thread_m_axis_video_V_last_V_1_data_out();
    void thread_m_axis_video_V_last_V_1_load_A();
    void thread_m_axis_video_V_last_V_1_load_B();
    void thread_m_axis_video_V_last_V_1_sel();
    void thread_m_axis_video_V_last_V_1_state_cmp_full();
    void thread_m_axis_video_V_last_V_1_vld_in();
    void thread_m_axis_video_V_last_V_1_vld_out();
    void thread_m_axis_video_V_strb_V_1_ack_in();
    void thread_m_axis_video_V_strb_V_1_ack_out();
    void thread_m_axis_video_V_strb_V_1_data_out();
    void thread_m_axis_video_V_strb_V_1_sel();
    void thread_m_axis_video_V_strb_V_1_vld_in();
    void thread_m_axis_video_V_strb_V_1_vld_out();
    void thread_m_axis_video_V_user_V_1_ack_in();
    void thread_m_axis_video_V_user_V_1_ack_out();
    void thread_m_axis_video_V_user_V_1_data_out();
    void thread_m_axis_video_V_user_V_1_load_A();
    void thread_m_axis_video_V_user_V_1_load_B();
    void thread_m_axis_video_V_user_V_1_sel();
    void thread_m_axis_video_V_user_V_1_state_cmp_full();
    void thread_m_axis_video_V_user_V_1_vld_in();
    void thread_m_axis_video_V_user_V_1_vld_out();
    void thread_p_Result_1_fu_425_p3();
    void thread_p_Result_2_fu_451_p4();
    void thread_p_Result_3_fu_461_p4();
    void thread_p_Result_4_fu_443_p3();
    void thread_p_Result_5_fu_471_p3();
    void thread_p_Result_6_fu_415_p4();
    void thread_p_Result_s_7_fu_433_p4();
    void thread_p_Result_s_fu_401_p4();
    void thread_p_lshr_fu_329_p4();
    void thread_p_neg_fu_324_p2();
    void thread_p_neg_t_fu_339_p2();
    void thread_s_axis_video_TDATA_blk_n();
    void thread_s_axis_video_TREADY();
    void thread_s_axis_video_V_data_V_0_ack_in();
    void thread_s_axis_video_V_data_V_0_ack_out();
    void thread_s_axis_video_V_data_V_0_data_out();
    void thread_s_axis_video_V_data_V_0_load_A();
    void thread_s_axis_video_V_data_V_0_load_B();
    void thread_s_axis_video_V_data_V_0_sel();
    void thread_s_axis_video_V_data_V_0_state_cmp_full();
    void thread_s_axis_video_V_data_V_0_vld_in();
    void thread_s_axis_video_V_data_V_0_vld_out();
    void thread_s_axis_video_V_dest_V_0_ack_out();
    void thread_s_axis_video_V_dest_V_0_vld_in();
    void thread_s_axis_video_V_last_V_0_ack_in();
    void thread_s_axis_video_V_last_V_0_ack_out();
    void thread_s_axis_video_V_last_V_0_data_out();
    void thread_s_axis_video_V_last_V_0_load_A();
    void thread_s_axis_video_V_last_V_0_load_B();
    void thread_s_axis_video_V_last_V_0_sel();
    void thread_s_axis_video_V_last_V_0_state_cmp_full();
    void thread_s_axis_video_V_last_V_0_vld_in();
    void thread_s_axis_video_V_last_V_0_vld_out();
    void thread_s_axis_video_V_user_V_0_ack_in();
    void thread_s_axis_video_V_user_V_0_ack_out();
    void thread_s_axis_video_V_user_V_0_data_out();
    void thread_s_axis_video_V_user_V_0_load_A();
    void thread_s_axis_video_V_user_V_0_load_B();
    void thread_s_axis_video_V_user_V_0_sel();
    void thread_s_axis_video_V_user_V_0_state_cmp_full();
    void thread_s_axis_video_V_user_V_0_vld_in();
    void thread_s_axis_video_V_user_V_0_vld_out();
    void thread_sel_tmp10_fu_294_p2();
    void thread_sel_tmp11_fu_299_p2();
    void thread_sel_tmp1_fu_264_p2();
    void thread_sel_tmp2_fu_279_p2();
    void thread_sel_tmp3_fu_233_p2();
    void thread_sel_tmp4_fu_227_p2();
    void thread_sel_tmp5_fu_269_p2();
    void thread_sel_tmp6_fu_284_p2();
    void thread_sel_tmp7_fu_221_p2();
    void thread_sel_tmp8_fu_274_p2();
    void thread_sel_tmp9_fu_289_p2();
    void thread_sel_tmp_fu_215_p2();
    void thread_tmp_10_fu_379_p2();
    void thread_tmp_11_fu_411_p1();
    void thread_tmp_1_fu_243_p2();
    void thread_tmp_2_fu_254_p1();
    void thread_tmp_3_fu_258_p2();
    void thread_tmp_4_fu_304_p3();
    void thread_tmp_5_fu_316_p3();
    void thread_tmp_6_fu_345_p4();
    void thread_tmp_7_fu_355_p3();
    void thread_tmp_8_fu_363_p3();
    void thread_tmp_9_fu_371_p3();
    void thread_video_o_data_V_11_fu_521_p3();
    void thread_video_o_data_V_4_fu_479_p3();
    void thread_video_o_data_V_5_fu_486_p3();
    void thread_video_o_data_V_6_fu_493_p3();
    void thread_video_o_data_V_7_fu_500_p3();
    void thread_video_o_data_V_8_fu_507_p3();
    void thread_video_o_data_V_9_fu_514_p3();
    void thread_video_o_data_V_fu_528_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
