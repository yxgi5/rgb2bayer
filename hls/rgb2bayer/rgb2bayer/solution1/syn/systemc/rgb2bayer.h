// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rgb2bayer_HH_
#define _rgb2bayer_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct rgb2bayer : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<64> > s_axis_video_TDATA;
    sc_in< sc_logic > s_axis_video_TVALID;
    sc_out< sc_logic > s_axis_video_TREADY;
    sc_in< sc_lv<8> > s_axis_video_TKEEP;
    sc_in< sc_lv<8> > s_axis_video_TSTRB;
    sc_in< sc_lv<1> > s_axis_video_TUSER;
    sc_in< sc_lv<1> > s_axis_video_TLAST;
    sc_in< sc_lv<1> > s_axis_video_TID;
    sc_in< sc_lv<1> > s_axis_video_TDEST;
    sc_out< sc_lv<24> > m_axis_video_TDATA;
    sc_out< sc_logic > m_axis_video_TVALID;
    sc_in< sc_logic > m_axis_video_TREADY;
    sc_out< sc_lv<3> > m_axis_video_TKEEP;
    sc_out< sc_lv<3> > m_axis_video_TSTRB;
    sc_out< sc_lv<1> > m_axis_video_TUSER;
    sc_out< sc_lv<1> > m_axis_video_TLAST;
    sc_out< sc_lv<1> > m_axis_video_TID;
    sc_out< sc_lv<1> > m_axis_video_TDEST;
    sc_in< sc_lv<32> > hsize_in;
    sc_in< sc_lv<32> > vsize_in;
    sc_in< sc_lv<2> > pattern_V;


    // Module declarations
    rgb2bayer(sc_module_name name);
    SC_HAS_PROCESS(rgb2bayer);

    ~rgb2bayer();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<64> > s_axis_video_V_data_V_0_data_out;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_vld_out;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_ack_in;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_ack_out;
    sc_signal< sc_lv<64> > s_axis_video_V_data_V_0_payload_A;
    sc_signal< sc_lv<64> > s_axis_video_V_data_V_0_payload_B;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_sel_rd;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_sel_wr;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_sel;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_load_A;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > s_axis_video_V_data_V_0_state;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > s_axis_video_V_user_V_0_data_out;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_vld_out;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_ack_in;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_ack_out;
    sc_signal< sc_lv<1> > s_axis_video_V_user_V_0_payload_A;
    sc_signal< sc_lv<1> > s_axis_video_V_user_V_0_payload_B;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_sel_rd;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_sel_wr;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_sel;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_load_A;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > s_axis_video_V_user_V_0_state;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > s_axis_video_V_last_V_0_data_out;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_vld_out;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_ack_in;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_ack_out;
    sc_signal< sc_lv<1> > s_axis_video_V_last_V_0_payload_A;
    sc_signal< sc_lv<1> > s_axis_video_V_last_V_0_payload_B;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_sel_rd;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_sel_wr;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_sel;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_load_A;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_load_B;
    sc_signal< sc_lv<2> > s_axis_video_V_last_V_0_state;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_state_cmp_full;
    sc_signal< sc_logic > s_axis_video_V_dest_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > s_axis_video_V_dest_V_0_state;
    sc_signal< sc_lv<24> > m_axis_video_V_data_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_ack_out;
    sc_signal< sc_lv<24> > m_axis_video_V_data_V_1_payload_A;
    sc_signal< sc_lv<24> > m_axis_video_V_data_V_1_payload_B;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_sel;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_load_A;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > m_axis_video_V_data_V_1_state;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<3> > m_axis_video_V_keep_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_keep_V_1_state;
    sc_signal< sc_lv<3> > m_axis_video_V_strb_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_strb_V_1_state;
    sc_signal< sc_lv<1> > m_axis_video_V_user_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_ack_out;
    sc_signal< sc_lv<1> > m_axis_video_V_user_V_1_payload_A;
    sc_signal< sc_lv<1> > m_axis_video_V_user_V_1_payload_B;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_sel;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_load_A;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > m_axis_video_V_user_V_1_state;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > m_axis_video_V_last_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > m_axis_video_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > m_axis_video_V_last_V_1_payload_B;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_sel;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_load_A;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > m_axis_video_V_last_V_1_state;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > m_axis_video_V_id_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_id_V_1_state;
    sc_signal< sc_lv<1> > m_axis_video_V_dest_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_dest_V_1_state;
    sc_signal< sc_logic > s_axis_video_TDATA_blk_n;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_14_fu_383_p2;
    sc_signal< sc_logic > m_axis_video_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > sel_tmp_fu_219_p2;
    sc_signal< sc_lv<1> > sel_tmp_reg_617;
    sc_signal< sc_lv<1> > sel_tmp7_fu_225_p2;
    sc_signal< sc_lv<1> > sel_tmp7_reg_623;
    sc_signal< sc_lv<1> > sel_tmp4_fu_231_p2;
    sc_signal< sc_lv<1> > sel_tmp4_reg_629;
    sc_signal< sc_lv<1> > sel_tmp3_fu_237_p2;
    sc_signal< sc_lv<1> > sel_tmp3_reg_635;
    sc_signal< sc_lv<31> > j_1_fu_252_p2;
    sc_signal< sc_lv<31> > j_1_reg_644;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_268_p2;
    sc_signal< sc_lv<1> > sel_tmp1_reg_649;
    sc_signal< sc_lv<1> > tmp_1_fu_247_p2;
    sc_signal< sc_lv<1> > sel_tmp5_fu_273_p2;
    sc_signal< sc_lv<1> > sel_tmp5_reg_654;
    sc_signal< sc_lv<1> > sel_tmp8_fu_278_p2;
    sc_signal< sc_lv<1> > sel_tmp8_reg_659;
    sc_signal< sc_lv<1> > sel_tmp2_fu_283_p2;
    sc_signal< sc_lv<1> > sel_tmp2_reg_664;
    sc_signal< sc_lv<1> > sel_tmp6_fu_288_p2;
    sc_signal< sc_lv<1> > sel_tmp6_reg_669;
    sc_signal< sc_lv<1> > sel_tmp9_fu_293_p2;
    sc_signal< sc_lv<1> > sel_tmp9_reg_674;
    sc_signal< sc_lv<1> > sel_tmp10_fu_298_p2;
    sc_signal< sc_lv<1> > sel_tmp10_reg_679;
    sc_signal< sc_lv<1> > sel_tmp11_fu_303_p2;
    sc_signal< sc_lv<1> > sel_tmp11_reg_684;
    sc_signal< sc_lv<32> > tmp_13_fu_375_p3;
    sc_signal< sc_lv<32> > tmp_13_reg_689;
    sc_signal< bool > ap_block_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< sc_lv<24> > video_o_data_V_fu_580_p3;
    sc_signal< sc_lv<32> > i_1_fu_588_p2;
    sc_signal< sc_lv<32> > i_1_reg_712;
    sc_signal< sc_lv<31> > j_reg_197;
    sc_signal< sc_lv<32> > i_reg_208;
    sc_signal< sc_lv<24> > p_Val2_s_fu_128;
    sc_signal< sc_lv<32> > j_cast_fu_243_p1;
    sc_signal< sc_lv<1> > tmp_2_fu_258_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_262_p2;
    sc_signal< sc_lv<32> > hsize_in_op_op_fu_315_p2;
    sc_signal< sc_lv<32> > p_neg_fu_328_p2;
    sc_signal< sc_lv<31> > p_lshr_fu_333_p4;
    sc_signal< sc_lv<1> > tmp_9_fu_320_p3;
    sc_signal< sc_lv<31> > p_neg_t_fu_343_p2;
    sc_signal< sc_lv<31> > tmp_10_fu_349_p4;
    sc_signal< sc_lv<1> > tmp_4_fu_308_p3;
    sc_signal< sc_lv<31> > tmp_11_fu_359_p3;
    sc_signal< sc_lv<31> > tmp_12_fu_367_p3;
    sc_signal< sc_lv<20> > tmp_5_fu_405_p4;
    sc_signal< sc_lv<10> > p_Result_6_fu_431_p4;
    sc_signal< sc_lv<10> > tmp_15_fu_427_p1;
    sc_signal< sc_lv<20> > tmp_6_fu_441_p3;
    sc_signal< sc_lv<10> > p_Result_s_10_fu_461_p4;
    sc_signal< sc_lv<20> > tmp_7_fu_471_p3;
    sc_signal< sc_lv<10> > p_Result_3_fu_501_p4;
    sc_signal< sc_lv<10> > p_Result_2_fu_491_p4;
    sc_signal< sc_lv<20> > tmp_8_fu_511_p3;
    sc_signal< sc_lv<24> > p_Result_s_fu_415_p5;
    sc_signal< sc_lv<24> > p_Result_1_fu_449_p5;
    sc_signal< sc_lv<24> > video_o_data_V_4_fu_531_p3;
    sc_signal< sc_lv<24> > p_Result_4_fu_479_p5;
    sc_signal< sc_lv<24> > video_o_data_V_5_fu_538_p3;
    sc_signal< sc_lv<24> > p_Result_5_fu_519_p5;
    sc_signal< sc_lv<24> > video_o_data_V_6_fu_545_p3;
    sc_signal< sc_lv<24> > video_o_data_V_7_fu_552_p3;
    sc_signal< sc_lv<24> > video_o_data_V_8_fu_559_p3;
    sc_signal< sc_lv<24> > video_o_data_V_9_fu_566_p3;
    sc_signal< sc_lv<24> > video_o_data_V_11_fu_573_p3;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_1E;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state2();
    void thread_ap_block_state3();
    void thread_ap_block_state3_io();
    void thread_ap_rst_n_inv();
    void thread_hsize_in_op_op_fu_315_p2();
    void thread_i_1_fu_588_p2();
    void thread_j_1_fu_252_p2();
    void thread_j_cast_fu_243_p1();
    void thread_m_axis_video_TDATA();
    void thread_m_axis_video_TDATA_blk_n();
    void thread_m_axis_video_TDEST();
    void thread_m_axis_video_TID();
    void thread_m_axis_video_TKEEP();
    void thread_m_axis_video_TLAST();
    void thread_m_axis_video_TSTRB();
    void thread_m_axis_video_TUSER();
    void thread_m_axis_video_TVALID();
    void thread_m_axis_video_V_data_V_1_ack_in();
    void thread_m_axis_video_V_data_V_1_ack_out();
    void thread_m_axis_video_V_data_V_1_data_out();
    void thread_m_axis_video_V_data_V_1_load_A();
    void thread_m_axis_video_V_data_V_1_load_B();
    void thread_m_axis_video_V_data_V_1_sel();
    void thread_m_axis_video_V_data_V_1_state_cmp_full();
    void thread_m_axis_video_V_data_V_1_vld_in();
    void thread_m_axis_video_V_data_V_1_vld_out();
    void thread_m_axis_video_V_dest_V_1_ack_in();
    void thread_m_axis_video_V_dest_V_1_ack_out();
    void thread_m_axis_video_V_dest_V_1_data_out();
    void thread_m_axis_video_V_dest_V_1_sel();
    void thread_m_axis_video_V_dest_V_1_vld_in();
    void thread_m_axis_video_V_dest_V_1_vld_out();
    void thread_m_axis_video_V_id_V_1_ack_in();
    void thread_m_axis_video_V_id_V_1_ack_out();
    void thread_m_axis_video_V_id_V_1_data_out();
    void thread_m_axis_video_V_id_V_1_sel();
    void thread_m_axis_video_V_id_V_1_vld_in();
    void thread_m_axis_video_V_id_V_1_vld_out();
    void thread_m_axis_video_V_keep_V_1_ack_in();
    void thread_m_axis_video_V_keep_V_1_ack_out();
    void thread_m_axis_video_V_keep_V_1_data_out();
    void thread_m_axis_video_V_keep_V_1_sel();
    void thread_m_axis_video_V_keep_V_1_vld_in();
    void thread_m_axis_video_V_keep_V_1_vld_out();
    void thread_m_axis_video_V_last_V_1_ack_in();
    void thread_m_axis_video_V_last_V_1_ack_out();
    void thread_m_axis_video_V_last_V_1_data_out();
    void thread_m_axis_video_V_last_V_1_load_A();
    void thread_m_axis_video_V_last_V_1_load_B();
    void thread_m_axis_video_V_last_V_1_sel();
    void thread_m_axis_video_V_last_V_1_state_cmp_full();
    void thread_m_axis_video_V_last_V_1_vld_in();
    void thread_m_axis_video_V_last_V_1_vld_out();
    void thread_m_axis_video_V_strb_V_1_ack_in();
    void thread_m_axis_video_V_strb_V_1_ack_out();
    void thread_m_axis_video_V_strb_V_1_data_out();
    void thread_m_axis_video_V_strb_V_1_sel();
    void thread_m_axis_video_V_strb_V_1_vld_in();
    void thread_m_axis_video_V_strb_V_1_vld_out();
    void thread_m_axis_video_V_user_V_1_ack_in();
    void thread_m_axis_video_V_user_V_1_ack_out();
    void thread_m_axis_video_V_user_V_1_data_out();
    void thread_m_axis_video_V_user_V_1_load_A();
    void thread_m_axis_video_V_user_V_1_load_B();
    void thread_m_axis_video_V_user_V_1_sel();
    void thread_m_axis_video_V_user_V_1_state_cmp_full();
    void thread_m_axis_video_V_user_V_1_vld_in();
    void thread_m_axis_video_V_user_V_1_vld_out();
    void thread_p_Result_1_fu_449_p5();
    void thread_p_Result_2_fu_491_p4();
    void thread_p_Result_3_fu_501_p4();
    void thread_p_Result_4_fu_479_p5();
    void thread_p_Result_5_fu_519_p5();
    void thread_p_Result_6_fu_431_p4();
    void thread_p_Result_s_10_fu_461_p4();
    void thread_p_Result_s_fu_415_p5();
    void thread_p_lshr_fu_333_p4();
    void thread_p_neg_fu_328_p2();
    void thread_p_neg_t_fu_343_p2();
    void thread_s_axis_video_TDATA_blk_n();
    void thread_s_axis_video_TREADY();
    void thread_s_axis_video_V_data_V_0_ack_in();
    void thread_s_axis_video_V_data_V_0_ack_out();
    void thread_s_axis_video_V_data_V_0_data_out();
    void thread_s_axis_video_V_data_V_0_load_A();
    void thread_s_axis_video_V_data_V_0_load_B();
    void thread_s_axis_video_V_data_V_0_sel();
    void thread_s_axis_video_V_data_V_0_state_cmp_full();
    void thread_s_axis_video_V_data_V_0_vld_in();
    void thread_s_axis_video_V_data_V_0_vld_out();
    void thread_s_axis_video_V_dest_V_0_ack_out();
    void thread_s_axis_video_V_dest_V_0_vld_in();
    void thread_s_axis_video_V_last_V_0_ack_in();
    void thread_s_axis_video_V_last_V_0_ack_out();
    void thread_s_axis_video_V_last_V_0_data_out();
    void thread_s_axis_video_V_last_V_0_load_A();
    void thread_s_axis_video_V_last_V_0_load_B();
    void thread_s_axis_video_V_last_V_0_sel();
    void thread_s_axis_video_V_last_V_0_state_cmp_full();
    void thread_s_axis_video_V_last_V_0_vld_in();
    void thread_s_axis_video_V_last_V_0_vld_out();
    void thread_s_axis_video_V_user_V_0_ack_in();
    void thread_s_axis_video_V_user_V_0_ack_out();
    void thread_s_axis_video_V_user_V_0_data_out();
    void thread_s_axis_video_V_user_V_0_load_A();
    void thread_s_axis_video_V_user_V_0_load_B();
    void thread_s_axis_video_V_user_V_0_sel();
    void thread_s_axis_video_V_user_V_0_state_cmp_full();
    void thread_s_axis_video_V_user_V_0_vld_in();
    void thread_s_axis_video_V_user_V_0_vld_out();
    void thread_sel_tmp10_fu_298_p2();
    void thread_sel_tmp11_fu_303_p2();
    void thread_sel_tmp1_fu_268_p2();
    void thread_sel_tmp2_fu_283_p2();
    void thread_sel_tmp3_fu_237_p2();
    void thread_sel_tmp4_fu_231_p2();
    void thread_sel_tmp5_fu_273_p2();
    void thread_sel_tmp6_fu_288_p2();
    void thread_sel_tmp7_fu_225_p2();
    void thread_sel_tmp8_fu_278_p2();
    void thread_sel_tmp9_fu_293_p2();
    void thread_sel_tmp_fu_219_p2();
    void thread_tmp_10_fu_349_p4();
    void thread_tmp_11_fu_359_p3();
    void thread_tmp_12_fu_367_p3();
    void thread_tmp_13_fu_375_p3();
    void thread_tmp_14_fu_383_p2();
    void thread_tmp_15_fu_427_p1();
    void thread_tmp_1_fu_247_p2();
    void thread_tmp_2_fu_258_p1();
    void thread_tmp_3_fu_262_p2();
    void thread_tmp_4_fu_308_p3();
    void thread_tmp_5_fu_405_p4();
    void thread_tmp_6_fu_441_p3();
    void thread_tmp_7_fu_471_p3();
    void thread_tmp_8_fu_511_p3();
    void thread_tmp_9_fu_320_p3();
    void thread_video_o_data_V_11_fu_573_p3();
    void thread_video_o_data_V_4_fu_531_p3();
    void thread_video_o_data_V_5_fu_538_p3();
    void thread_video_o_data_V_6_fu_545_p3();
    void thread_video_o_data_V_7_fu_552_p3();
    void thread_video_o_data_V_8_fu_559_p3();
    void thread_video_o_data_V_9_fu_566_p3();
    void thread_video_o_data_V_fu_580_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
